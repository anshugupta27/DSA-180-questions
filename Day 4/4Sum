https://leetcode.com/problems/4sum/

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> v ; 
        if ( nums.empty()  ) return v ; 
        sort ( nums.begin(), nums.end() ) ;
        
        for ( int i = 0 ; i < nums.size()-1 ; i++ )
        {
            for ( int j = i+1 ; j < nums.size()-1 ; j++ )
            {
                
                int left = j+1 , right = nums.size()-1 ; 
                int val = target - (nums[i]+nums[j]) ;
                while ( left < right )
                {
                    if ( (nums[left]+nums[right]) == val )
                    {
                        v.push_back ({nums[i],nums[j],nums[left],nums[right]});
                    while ( left < nums.size()-1 and nums[left] == nums[left+1] ) left++ ;
                    while ( right > 0 and nums[right] == nums[right-1] ) right-- ;
                        left++ , right-- ; 

                    }
                    else if ( (nums[left]+nums[right]) > val ) right--;
                    else left++ ; 
                }
                while ( j < nums.size()-1 and nums[j] == nums[j+1] )j++ ; 
            }
            while ( i < nums.size()-1 and nums[i] == nums[i+1] )i++ ; 
            
        }
        return v ; 
    }
};
