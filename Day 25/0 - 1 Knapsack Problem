https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1#

class Solution
{
    public:
    //Function to return max value that can be put in knapsack of capacity W.
    
    int dp[1001][1001] ;
    void knapSackUtil ( int W , int wt[] , int val[] , int n )
    {
        for ( int i = 0 ; i < n+1 ; i++ ) // i = n : top down 
        {
            for ( int j = 0 ; j < W+1 ; j++ ) // j = weight : left right 
            {
                if ( i == 0 || j == 0 ) {
                    dp[i][j] = 0 ;
                    continue ; 
                }
                if ( j >= wt[i-1] )
                dp[i][j] = max ( val[i-1] + dp[i-1][j-wt[i-1]] , dp[i-1][j] ) ;
                else 
                dp[i][j] = dp[i-1][j] ;
            }
        }
    }
    int knapSack(int W, int wt[], int val[], int n) 
    { 
       knapSackUtil ( W , wt , val , n ) ;
       return dp[n][W] ;
    }
};
