https://leetcode.com/problems/longest-common-subsequence/

class Solution {
public:
    int longestCommonSubsequenceUtil ( string s1 , int l1 , string s2 , int l2 )
    {
        int dp[l1+1][l2+1] ;
        for ( int i = 0 ; i < l1+1 ; i++ ) dp[i][0] = 0 ;  // column 0 
        for ( int i = 0 ; i < l2+1 ; i++ ) dp[0][i] = 0 ; // row 0 
        
        for ( int i = 1 ; i < l1+1 ; i++ )
        {
            for ( int j = 1 ; j < l2+1 ; j++ )
            {
                if ( s1[i-1] == s2[j-1] )
                    dp[i][j] = 1 + dp[i-1][j-1] ;
                else 
                {
                    dp[i][j] = max ( dp[i-1][j] , dp[i][j-1] ) ;
                }
            }
        }
        return dp[l1][l2] ;
    }
    int longestCommonSubsequence(string text1, string text2) {
    return longestCommonSubsequenceUtil ( text1 , text1.length() , text2 , text2.length() ) ;
    }
};
