https://leetcode.com/problems/reverse-pairs/submissions/

class Solution {
public:
    int merge ( vector<int> &nums , int temp[] , int low , int mid , int high )
    {
        int count = 0 , j = mid ;
        int left = low , k = low , right = mid ; 
        for ( int i = low ; i < mid ; i++ )
        {
            while ( j <= high and nums[i] > 2LL*nums[j] )
                j++ ;
            count += ( j - mid ) ;
        }
        while ( left < mid and right <= high )
        {
           
            if ( nums[left] > nums[right] )
            {
                temp[k++] = nums[right] ;
                right++ ; 
            }
            else if ( nums[left] <= nums[right] )
            {
                temp[k++] = nums[left] ;
                left++ ; 
            }
            
        }
        while ( left < mid )
        {
            temp[k++] = nums[left++] ;
        }
        while ( right <= high )
        {
            temp[k++] = nums[right++] ;
        }
        for ( int i = low ; i <= high ; i++ )
            nums[i] = temp[i] ;
        return count ; 
    }
    int reversePairsUtil ( vector<int> &nums , int temp[] , int low , int high )
    {
        if ( low >= high ) return 0 ; 
            int mid = ( low + high ) / 2 ; 
            int count = reversePairsUtil ( nums , temp , low , mid ) ;
             count += reversePairsUtil ( nums , temp , mid+1 , high ) ;
             count += merge ( nums , temp , low , mid+1 , high ) ;
         return count ; 
        
            
        
    }
    int reversePairs(vector<int>& nums) {
        int temp[nums.size()] , count = 0 ;
        return reversePairsUtil ( nums , temp , 0 , nums.size()-1 ) ;
     
    }
};
