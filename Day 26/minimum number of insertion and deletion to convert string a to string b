https://leetcode.com/problems/delete-operation-for-two-strings/

class Solution {
public:
    
    int LCS ( string s1 , string s2 )
    {
        int n = s1.length() , m = s2.length() ;
        int dp[n+1][m+1] ;
        for ( int i = 0 ; i < n+1 ; i++ ) dp[i][0] = 0 ;
        for ( int i = 0 ; i < m+1 ; i++ ) dp[0][i] = 0 ;
        for ( int i = 1 ; i < n+1 ; i++ )
        {
            for ( int j = 1 ; j < m+1 ; j++ )
            {
                if ( s1[i-1] == s2[j-1] )
                    dp[i][j] = dp[i-1][j-1] + 1 ; 
                else 
                    dp[i][j] = max ( dp[i][j-1] , dp[i-1][j] ) ;
            }
        }
        return dp[n][m] ;
    }
    int minDistance(string word1, string word2) {
        int lcs = LCS ( word1 , word2 ) ;
        int deletion = word1.length() - lcs ;  //this many words need to be deleted from the 1st string 
        int insertion = word2.length() - lcs ; // this many extra words need to be inserted in the 1st word from the 2nd word 
        return deletion + insertion ; 
    }
};
