https://leetcode.com/problems/burst-balloons/

class Solution {
public:
    int dp[600][600] ;
    int maxCoinsUtil ( vector<int>& nums , int i , int j )
    {
        int Max = INT_MIN ;
        if ( i >= j ) return 0 ; 
        if ( dp[i][j] != -1 ) return dp[i][j] ;
         
        for ( int k = i ; k <= j-1 ; k++ )
        {
            int temp = maxCoinsUtil ( nums , i , k ) + 
                   maxCoinsUtil ( nums , k+1 , j ) +  nums[i-1]*nums[k]*nums[j] ;
            
            Max = max ( temp , Max ) ;
        }
        dp[i][j] = Max ; 
        return dp[i][j]  ; 
    }
    int maxCoins(vector<int>& nums) {
       nums.insert ( nums.begin() , 1 ) ;
        nums.push_back ( 1 ) ;
        memset ( dp , -1 , sizeof(dp) ) ;
        return maxCoinsUtil ( nums , 1 , nums.size()-1 ) ; 
    }
};
