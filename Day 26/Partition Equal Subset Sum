https://leetcode.com/problems/partition-equal-subset-sum/

--- varition of knapsack 

class Solution {
public:
    
    bool canPartitionUtil ( vector<int> &nums , int target )
    {
        int n = nums.size() ;
        bool dp[n+1][target+1] ;
        for ( int i = 0 ; i <= target ; i++ )
            dp[0][i] = false ; 
        for ( int i = 0 ; i <= n ; i++ )
            dp[i][0] = true ; 
        for ( int i = 1 ; i <= n ; i++ )
        {
            for ( int j = 1 ; j <= target ; j++ )
            {
                if ( j >= nums[i-1] )
                    dp[i][j] = dp[i-1][j-nums[i-1]] || dp[i-1][j] ;
                else
                    dp[i][j] = dp[i-1][j] ;
            }
        }
        return dp[n][target] ;
    }
    
    bool canPartition(vector<int>& nums) {
        int sum = 0 ; 
        for ( int i = 0 ; i < nums.size() ; i++ )
        sum += nums[i] ;
        
        if ( sum % 2 ) return false ; 
        else return ( canPartitionUtil ( nums , sum/2 ) ) ;
    }
};
