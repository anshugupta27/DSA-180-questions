https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1#


bool isCycleBFS ( int V , int node , vector<int>adj[] , vector<int>&visited )
    {
        queue<pair<int,int>> q ; 
        q.push ({node,-1} ) ;
        visited[node] = 1 ; 
        
        while ( !q.empty() )
        {
            
            int val = q.front().first ; 
            int parent = q.front().second ;
            q.pop() ;
            for ( auto it : adj[val] )
            {
                if ( !visited[it] )
                {
                    visited[it] = 1 ; 
                    q.push ( { it , val } ) ;
                    
                }
                else if ( it != parent ) return true ; 
                
            }
        }
        return false ;
        
    }
	bool isCycle(int V, vector<int>adj[])
	{
	    vector<int> visited(V,0) ;
	    for ( int i = 0 ; i < V ; i++ )
	    {
	        if ( !visited[i] )
	        {
	            if ( isCycleBFS ( V , i , adj , visited ) ) return true ; 
	        }
	    }
	    return false ; 
	}
