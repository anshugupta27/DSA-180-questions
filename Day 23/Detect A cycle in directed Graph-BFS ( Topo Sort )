https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1


bool topoSortBFS ( int V , vector<int> adj[] )
	{
	    vector<int> inDegree( V , 0 ) ;
	    vector<int> finalAns ; 
	    queue<int> q ;
	    for ( int i = 0 ; i < V ; i++ )
	    {
	        for ( auto it : adj[i] )
	        {
	            inDegree[it]++ ;
	        }
	    }
	    for ( int i = 0 ; i < V ; i++ )
	    {
	        if ( inDegree[i] == 0 )
	        q.push ( i ) ;
	    }
	    while ( !q.empty() )
	    {
	        int node = q.front() ;
	        q.pop() ;
	        finalAns.push_back ( node ) ;
	        for ( auto it : adj[node] )
	        {
	            --inDegree[it] ;
	            if ( inDegree[it] == 0 )
	            q.push ( it ) ;
	        }
	    }
	    return !( finalAns.size() == V ) ; 
	}
	
	
	bool isCyclic(int V, vector<int> adj[]) 
	{
	   	return topoSortBFS ( V , adj ) ;
	}
