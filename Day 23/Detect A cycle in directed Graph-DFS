https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1


bool isCyclicDFS ( int node , int V , vector<int> adj[] , vector<int>&visited , vector<int> &backtrackVisited )
	{
	    visited[node] = 1 ; 
	    backtrackVisited[node] = 1 ; 
	    for ( auto it : adj[node] )
	    {
	        if ( !visited[it] )
	        {
	            if( isCyclicDFS ( it , V , adj , visited , backtrackVisited ) )
	            return true ;
	        }
	        else if ( backtrackVisited[it] ) return true ; 
	    }
	    backtrackVisited[node] = 0 ; 
	    return false ; 
	}
	
	bool isCyclic(int V, vector<int> adj[]) 
	{
	   	vector<int> visited(V,0) ;
	   	vector<int> backtrackVisited(V,0) ;
	   	for ( int i = 0 ; i < V ; i++ )
	   	{
	   	    if ( !visited[i] )
	   	    {
	   	        if ( isCyclicDFS ( i , V , adj , visited , backtrackVisited ) )
	   	        return true ;
	   	    }
	   	}
	   	return false ; 
	}
