https://leetcode.com/problems/compare-version-numbers/


 
 int compareVersion(string version1, string version2) {
        
       queue<string> q1 , q2 ; 
        string str ; 
        version1 += "." ;
        version2 += "." ;
        for ( int i = 0 ; i < version1.length() ; i++ )  // splitting the string using delimiter "."
        {
           if ( version1[i] != '.' )
               str = str + version1[i] ;
            else
            {
                q1.push ( str ) ;
                str = "" ;
            }
        }
        for ( int i = 0 ; i < version2.length() ; i++ )
        {
            if ( version2[i] != '.' )
               str = str + version2[i] ;
            else
            {
                q2.push ( str ) ;
                str = "" ;
            }
        }
        
        
        while ( q1.size() and q2.size() )   // comparing the corresponding groups 
        {
            if ( stoi(q1.front()) > stoi(q2.front()) ) return 1 ; 
            if ( stoi(q1.front()) < stoi(q2.front()) ) return -1 ; 
            q1.pop() , q2.pop() ;
        }
        
        if ( !q1.size() and !q2.size() ) return 0 ;  // if both the queue are empty 
        
        if ( q1.size() ) {             // if q1 queue is not empty and q2 is empty 
            int val = 0 ; 
            while ( !q1.empty() )      // we are checking that whether the remaing q1 elements add up more than 0 or not 
            {
             val = val + stoi ( q1.front() ) ;
             q1.pop() ;
            }
            if ( val == 0 ) return 0 ;
            else return 1 ; 
        } 
        if ( q2.size() ) {
            int val = 0 ; 
            while ( !q2.empty() )
            {
             val = val + stoi ( q2.front() ) ;
             q2.pop() ;
            }
            if ( val == 0 ) return 0 ;
            else return -1 ; 
            
        }
        return 0 ; 
        
        
    }
