

https://leetcode.com/problems/palindrome-partitioning/

   bool isPalindrome ( string s , int low , int high ){
        
        while ( low <= high ){
            if ( s[low] != s[high] ) {return false ; }
            low++ ,high-- ;
        }
        return true ; 
    }
    void partitionUtil ( string s , int start , vector<string> &temp , vector<vector<string>> &ans ){
        if ( start == s.size() ) {
            ans.push_back ( temp ) ;
            return ; 
        }
        for ( int i = start ; i < s.size() ; i++ ){
            
            if ( isPalindrome(s, start , i ))
            {
                temp.push_back ( s.substr ( start , i-start+1 ) ) ;
                partitionUtil ( s , i+1 , temp , ans ) ;
                temp.pop_back();
            }
           
            
        }
    }
       vector<vector<string>> partition(string s) {
       vector<string>temp ; 
       vector<vector<string>> ans ; 
        partitionUtil ( s , 0 , temp , ans ) ;
           return ans;
    }
