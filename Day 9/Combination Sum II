https://leetcode.com/problems/combination-sum-ii/

top to bottom recursion is happening - ie. depth first 

class Solution {
public:
    void combinationSum2Util (   int start , int target , vector<int> &candidates , vector<vector<int>> &ans,vector<int> &temp  ){
        
        
        if ( target == 0 ){
           
            ans.push_back ( temp ) ;
            return ; 
        } 
        
       
        for ( int i = start ; i < candidates.size() ; i++ ){
            if ( i > start and candidates[i] == candidates[i-1] ) continue ;
            if ( target < candidates[i] ) break ; 
            
            temp.push_back ( candidates[i] ) ;
            combinationSum2Util (    i + 1 , target-candidates[i] , candidates , ans ,temp  ) ;
            temp.pop_back() ;
        
        }
        
        
    }
    public:
   
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort ( candidates.begin() , candidates.end() ) ;
        vector<vector<int>> ans ; 
        vector <int> temp ; 
        
        combinationSum2Util (   0 , target ,candidates, ans ,temp  ) ;
        return ans  ;
    }
};
