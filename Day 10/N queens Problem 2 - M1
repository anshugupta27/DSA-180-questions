https://leetcode.com/problems/n-queens-ii/

line : 62 


class Solution {
public:
       
    bool isValid( int n , int row , int col , vector<string> &ans )
    {
        
        for ( int i = 0 ; i < n ; i++ )
        {
            if ( ans[i][col] == 'Q' ) return false ; 
        }
        
        
        for ( int i = row , j = col ; i >= 0 and j >= 0 ; i-- , j-- )
        {
            if ( ans[i][j] == 'Q' ) return false ; 
        }
        
        
        for ( int i = row , j = col ; i >= 0 and j < n ; i-- , j++ )
        {
            if ( ans[i][j] == 'Q' ) return false ; 
        }
        
        return true ; 
    }
    void solveNQueensUtil ( int n , int row  , vector<string> &a , vector<vector<string>> &finalans )
    {
        if ( row == n ) {
            finalans.push_back ( a ) ;
            return ; 
        }
        for ( int i = 0 ; i < n ; i++ )
        {
            if ( isValid ( n , row , i , a ) )
            {
                a[row][i] = 'Q' ;
                solveNQueensUtil ( n , row+1 , a , finalans ) ;
                a[row][i] = '.' ;
            }
        }
        
    }
    int totalNQueens(int n) {
        vector<vector<string>> finalans ; 
        string temp = "" ;
        for ( int i = 0 ; i < n ; i++ )
            temp += '.' ;
        
        
        vector<string> v ( n , temp ) ;
        
        solveNQueensUtil ( n , 0 , v , finalans ) ;
        return finalans.size() ;   // ********************************** everything is same just this line is the difference in n Queen 1 and n Queen 2 ******
        
    }
};
