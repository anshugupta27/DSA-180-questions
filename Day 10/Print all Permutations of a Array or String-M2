https://leetcode.com/problems/permutations/

Time : O(n*n!)
Space : O(1) only stack space O(n)
class Solution {
public:
   void permuteUtil ( vector<int> &nums , int index , vector<vector<int>> &ans )
   {
       if ( index == nums.size() )
       {
           ans.push_back ( nums ) ;
           return ; 
       }
       for ( int i = index ; i < nums.size() ; i++ )
       {
           swap ( nums[i] , nums[index] ) ;
           permuteUtil ( nums , index+1 , ans ) ;
           swap ( nums[i] , nums[index] ) ;
       }
       
   }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans ; 
        permuteUtil ( nums , 0 , ans ) ;
        return ans ; 
    }
};
