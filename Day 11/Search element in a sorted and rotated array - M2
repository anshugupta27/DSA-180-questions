https://leetcode.com/problems/search-in-rotated-sorted-array/



int searchBS ( vector<int> &nums , int target , int low , int high )
    {
        int N = nums.size() ;
        while ( low <= high )
        {
            int mid = low + ( high - low ) / 2 ;
            
            
            if ( nums[mid] == target ) return mid ; 
            
            else if ( nums[low] <= nums[mid] )
            {
                if ( target >= nums[low] and target <= nums[mid] ) high = mid - 1 ; 
                else low = mid + 1 ; 
            }
            
            else if ( nums[mid] <= nums[high] ) 
            {
                if ( target >= nums[mid] and target <= nums[high] ) low = mid + 1 ; 
                else high = mid - 1 ; 
            }
            
            else 
            {
                if ( target <= nums[mid] ) high = mid - 1 ; 
                else low = mid + 1 ; 
            }
            
        }
        return -1 ; 
    }
    
    int search(vector<int>& nums, int target) {
        int low = 0 , high = nums.size() - 1 ; 
        return searchBS ( nums , target , low , high ) ;
        
        
        
         
    }
