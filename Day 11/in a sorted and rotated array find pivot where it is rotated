int findPivot ( vector<int> &nums , int low , int high )
    {
        int N = nums.size() ;
        while ( low <= high )
        {
            int mid = low + ( high - low ) / 2 ;
            
            int next = (mid + 1)%N ; 
            int prev = (mid + N - 1)%N ; 
            
            if ( nums[next] >= nums[mid] and nums[prev] >= nums[mid] ) return mid ;
            
            else if ( nums[low] <= nums[mid] )
            { 
                prev = (low + N - 1)%N ;
                if(nums[low]<nums[prev])
                    return low;
                low = mid + 1 ;
            }
            else if ( nums[mid] <= nums[high] ) 
                high = mid - 1 ; 
            // cout<<low<<" "<<high<<"\n";
        }
        return 0 ; 
    }
